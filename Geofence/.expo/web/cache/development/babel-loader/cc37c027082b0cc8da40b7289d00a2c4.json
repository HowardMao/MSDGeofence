{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Howard Mao\\\\Desktop\\\\MSDGeofence\\\\MSDGeofence\\\\Geofence\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Location } from \"expo-location\";\nimport * as Permissions from \"expo-permissions\";\nimport Map from \"./components/Map\";\nimport { IP } from \"@env\";\nexport default function App() {\n  var _useState = useState(\"dis/unconnected\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      serverConnection = _useState2[0],\n      setServerConnection = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messageFromServer = _useState4[0],\n      setMessageFromServer = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hasLocation = _useState6[0],\n      setHasLocation = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      location = _useState8[0],\n      setLocation = _useState8[1];\n\n  var ws = React.useRef(new WebSocket(\"ws://\" + IP + \":3000\")).current;\n  useEffect(function () {\n    (function _callee() {\n      var _await$Permissions$as, status1, _await$Permissions$as2, status2, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION_BACKGROUND));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status1 = _await$Permissions$as.status1;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION_FOREGROUND));\n\n            case 6:\n              _await$Permissions$as2 = _context.sent;\n              status2 = _await$Permissions$as2.status2;\n\n              if (status1 !== \"granted\" || status2 !== \"granted\") {\n                console.log(\"Permission to access location was denied\");\n              }\n\n              _context.next = 11;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 11:\n              location = _context.sent;\n              setLocation(location);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    ws.onopen = function () {\n      setServerConnection(\"connected\");\n      ws.send(\"Connected to server successfully\");\n    };\n\n    ws.onmessage = function (message) {\n      setMessageFromServer(message.data);\n    };\n  });\n\n  sendMessage = function sendMessage() {\n    ws.send(\"message sent\");\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 0.75\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"send message to server\",\n    onPress: function onPress() {\n      sendMessage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Server Connection is: \", serverConnection), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, location), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Current message from Server: \", messageFromServer)), React.createElement(Map, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  }\n});","map":{"version":3,"sources":["C:/Users/Howard Mao/Desktop/MSDGeofence/MSDGeofence/Geofence/App.js"],"names":["React","useEffect","useState","Location","Permissions","Map","IP","App","serverConnection","setServerConnection","messageFromServer","setMessageFromServer","hasLocation","setHasLocation","location","setLocation","ws","useRef","WebSocket","current","askAsync","LOCATION_BACKGROUND","status1","LOCATION_FOREGROUND","status2","console","log","getCurrentPositionAsync","onopen","send","onmessage","message","data","sendMessage","styles","container","flex","StyleSheet","create","backgroundColor","paddingTop","Platform","OS","StatusBar","currentHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  View,\n  Button,\n  Text,\n} from \"react-native\";\nimport { Location } from \"expo-location\";\nimport * as Permissions from \"expo-permissions\";\n\nimport Map from \"./components/Map\";\nimport { IP } from \"@env\";\n\nexport default function App() {\n  const [serverConnection, setServerConnection] = useState(\"dis/unconnected\");\n  const [messageFromServer, setMessageFromServer] = useState(\"\");\n  const [hasLocation, setHasLocation] = useState(false);\n  const [location, setLocation] = useState(null);\n  var ws = React.useRef(new WebSocket(\"ws://\" + IP + \":3000\")).current;\n\n  useEffect(() => {\n    async () => {\n      let { status1 } = await Permissions.askAsync(\n        Permissions.LOCATION_BACKGROUND\n      );\n      let { status2 } = await Permissions.askAsync(\n        Permissions.LOCATION_FOREGROUND\n      );\n      if (status1 !== \"granted\" || status2 !== \"granted\") {\n        console.log(\"Permission to access location was denied\");\n      }\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    };\n\n    ws.onopen = () => {\n      setServerConnection(\"connected\");\n      ws.send(\"Connected to server successfully\");\n    };\n    ws.onmessage = (message) => {\n      setMessageFromServer(message.data);\n    };\n  });\n\n  sendMessage = () => {\n    ws.send(\"message sent\");\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={{ flex: 0.75 }}>\n        <Button\n          title=\"send message to server\"\n          onPress={() => {\n            sendMessage();\n          }}\n        />\n        <Text>Server Connection is: {serverConnection}</Text>\n        <Text>{location}</Text>\n        <Text>Current message from Server: {messageFromServer}</Text>\n      </View>\n      <Map style={{ flex: 1 }} />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}